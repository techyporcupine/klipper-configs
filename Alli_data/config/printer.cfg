[virtual_sdcard]
path: /home/printers/Alli_data/gcodes
on_error_gcode: CANCEL_PRINT

[input_shaper]
shaper_freq_x: 32.9
shaper_freq_y: 30.4

[pause_resume]

[multi_pin makerbot_logo]
pins: PC5, PC6

[output_pin Red_Logo]
pin: multi_pin:makerbot_logo

[output_pin BEEPER_Pin]
pin: PG5
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1

[gcode_macro M300]
gcode:
    {% set tones = [1000, 1500, 2000, 2500, 3000, 2500, 2000, 1500, 1000] %} ; S sets the tone frequency
    {% for count in tones %}
    {% set cytime = 1 / count %}
    SET_PIN PIN=BEEPER_Pin VALUE={0.5} CYCLE_TIME={cytime} ;Play tone
    G4 P50 ;tone duration
    SET_PIN PIN=BEEPER_Pin VALUE=0
    {% endfor %}


[delayed_gcode startup_stuff]
initial_duration: 1
gcode:
    SET_PIN PIN=Red_Logo VALUE=1
    M300

#######################################################################
# This file contains common pin mappings for the Makerbot
# Mightyboard. To use this config, the firmware should be compiled for
# the Atmel atmega1280.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PF1
dir_pin: !PF0
enable_pin: !PF2
microsteps: 16
rotation_distance: 34
endstop_pin: ^!PL1
position_endstop: 265
position_max: 265
position_min: 0
homing_speed: 50

[stepper_y]
step_pin: PF5
dir_pin: !PF4
enable_pin: !PF6
microsteps: 16
rotation_distance: 34
endstop_pin: ^!PL3
position_endstop: 150
position_max: 150
position_min: 0
homing_speed: 50

[stepper_z]
step_pin: PK1
dir_pin: !PK0
enable_pin: !PK2
microsteps: 16
rotation_distance: 8.15
endstop_pin: !PL6
position_endstop: 0
position_max: 150
position_min: 0
homing_speed: 10

[extruder]
step_pin: PA3
dir_pin: !PA2
enable_pin: !PA4
microsteps: 16
rotation_distance: 33.238
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PH3
sensor_type: MAX6675
sensor_pin: PE3
spi_software_miso_pin: PE5
spi_software_sclk_pin: PE2
spi_software_mosi_pin: PA1 #dummy mosi pin
control: pid
pid_Kp: 26.414
pid_Ki: 1.115
pid_Kd: 156.5054
min_temp: 0
max_temp: 260

[heater_fan heatbreak_fan]
pin: PH4
cycle_time: 0.075
fan_speed: 0.8

[controller_fan my_controller_fan]
pin: PB6
cycle_time: 0.075
fan_speed: 0.65

[fan]
pin: PL5

[heater_bed]
heater_pin: PL4
sensor_type: ATC Semitec 104GT-2
sensor_pin: PK7
control: pid
pid_Kp: 70.037
pid_Ki: 1.710
pid_Kd: 717.000
min_temp: 0
max_temp: 130

[mcu]
serial: /dev/ttyAMA0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 2500
minimum_cruise_ratio: 0.5
max_z_velocity: 15
max_z_accel: 100

[mcp4018 x_axis_pot]
scl_pin: PJ5
sda_pin: PF3
wiper: 0.50
scale: 0.773

[mcp4018 y_axis_pot]
scl_pin: PJ5
sda_pin: PF7
wiper: 0.50
scale: 0.773

[mcp4018 z_axis_pot]
scl_pin: PJ5
sda_pin: PK3
wiper: 0.50
scale: 0.773

[mcp4018 a_axis_pot]
scl_pin: PJ5
sda_pin: PA5
wiper: 0.50
scale: 0.773

[mcp4018 b_axis_pot]
scl_pin: PJ5
sda_pin: PJ6
wiper: 0.50
scale: 0.773

[display]
lcd_type: hd44780_spi
spi_software_mosi_pin: PC3
spi_software_sclk_pin: PC2
#miso not used, dummy pin.
spi_software_miso_pin: PJ1
latch_pin: PC4
click_pin: ^PJ0
back_pin: ^PJ2
up_pin: ^PJ4
down_pin: ^PJ3

[pca9533 led_strip]
#set_led led=led_strip red=1 green=1 blue=1
i2c_bus: twi
i2c_address: 98
initial_RED: 1
initial_GREEN: 1
initial_BLUE: 1

[mcu]
serial: /dev/serial/by-id/usb-MakerBot_Industries_The_Replicator_74132343530351013041-if00

[menu __main __octoprint]
type: disabled

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro LED_OFF]
description: Turn off LED strip
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    set_led led=led_strip red=0 green=0 blue=0

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}